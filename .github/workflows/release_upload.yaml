on:
  workflow_call:
    inputs:
      new_version:
        description: 'The new version to release'
        required: true
        type: string
      new_release_published:
        description: 'Whether a new release was published'
        required: true
        type: string

name: Upload Release Artifacts

env:
  RUST_BACKTRACE: 1

jobs:
    upload_binaries:
        name: Upload Binaries
        runs-on: ubuntu-latest
        strategy:
          fail-fast: false
          matrix:
            include:
              - target: x86_64-pc-windows-gnu
                archive: zip
                platform: windows_x86_64
              - target: x86_64-unknown-linux-musl
                archive: tar.gz tar.bz2 tar.xz
                platform: linux_x86_64
              - target: x86_64-apple-darwin
                archive: zip
                platform: macos_x86_64
        steps:
          - name: Checkout
            uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
            with:
                fetch-depth: 0
                persist-credentials: false

          - name: Install Rust Stable
            uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f
            with:
                profile: minimal
                toolchain: stable
                override: true

          - name: Create the event file
            run: |
              cat $GITHUB_EVENT_PATH | jq -r .release.tag_name | xargs -I {} echo 'RELEASE_VERSION="{}"' >> $GITHUB_ENV

          - name: Compile and release
            uses: rust-build/rust-build.action@6726f3b5a7bd3a686ced9e2359ae0d8554c54659
            env:
              GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT_GITHUB }}
            with:
              MINIFY: true
              RUSTTARGET: ${{ matrix.target }}
              ARCHIVE_TYPES: ${{ matrix.archive }}
              ARCHIVE_NAME: distance_aa_CLI${{ env.RELEASE_VERSION }}${{matrix.platform}}
              EXTRA_FILES: "README.md LICENSE"
